	/**
	{{#description}}
     * {{description}}
     *
    {{/description}}
     * @var {{{datatype}}}{{^required}}|null{{/required}}
     * @SerializedName("{{baseName}}")
{{#required}}
	 * @Assert\NotNull()
{{/required}}
{{#isEnum}}
	{{^isContainer}}
	 * @Assert\Choice({ {{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}}, {{/-last}}{{/enumVars}}{{/allowableValues}} })
	{{/isContainer}}
{{/isEnum}}
{{^isPrimitiveType}}
{{^isListContainer}}
	{{^isDate}}
	{{^isDateTime}}
	 * @Assert\Type("{{vendorExtensions.x-fullType}}")
	 * @Type("{{vendorExtensions.x-fullType}}")
	{{/isDateTime}}
	{{/isDate}}
	{{#isDate}}
	 * @Assert\Date()
	 * @Type("DateTime")
	{{/isDate}}
	{{#isDateTime}}
	 * @Assert\DateTime()
	 * @Type("DateTime")
	{{/isDateTime}}
{{/isListContainer}}
{{#isListContainer}}
	 * @Assert\All({
 	{{#items}}
	 *   @Assert\Type("{{datatype}}")
	{{/items}}
	 * })
	{{#items}}
	 * @Type("array<{{datatype}}>")
	{{/items}}
{{/isListContainer}}
{{/isPrimitiveType}}
{{#isPrimitiveType}}
{{#isListContainer}}
	 * @Assert\All({
 	{{#items}}
 	 *   @Assert\Type("{{datatype}}")
	{{/items}}
	 * })
	 {{#items}}
	 * @Type("array<{{datatype}}>")
	 {{/items}}
{{/isListContainer}}
{{^isListContainer}}
	 * @Assert\Type("{{datatype}}")
	 * @Type("{{datatype}}")
{{/isListContainer}}
{{/isPrimitiveType}}
{{#hasValidation}}
	{{#maxLength}}
	 * @Assert\Length(
	 *   max = {{maxLength}}
	 * )
	{{/maxLength}}
	{{#minLength}}
	 * @Assert\Length(
	 *   min = {{minLength}}
	 * )
	{{/minLength}}
	{{#minimum}}
	{{#exclusiveMinimum}}
	 * @Assert\GreaterThan({{minimum}})
	{{/exclusiveMinimum}}
	{{^exclusiveMinimum}}
	 * @Assert\GreaterThanOrEqual({{minimum}})
	{{/exclusiveMinimum}}
	{{/minimum}}
	{{#maximum}}
	{{#exclusiveMaximum}}
	 * @Assert\LessThan({{minimum}})
	{{/exclusiveMaximum}}
	{{^exclusiveMaximum}}
	 * @Assert\LessThanOrEqual({{minimum}})
	{{/exclusiveMaximum}}
	{{/maximum}}
	{{#pattern}}
	 * @Assert\Regex("{{pattern}}")
	{{/pattern}}
	{{#maxItems}}
	 * @Assert\Count(
	 *   max = {{maxItems}}
	 * )
	{{/maxItems}}
	{{#minItems}}
	 * @Assert\Count(
	 *   min = {{minItems}}
	 * )
	{{/minItems}}
{{/hasValidation}}
	 */
    protected ${{name}};
